# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Continuous Integration

on:
  push:
    branches:
      - "main"
      - "dev"
      - "feature/*"
      - "release/*"
  pull_request:
    branches:
      - "main"
      - "dev"
    types:
      - "opened"
      - "edited"
      - "synchronize"

jobs:
  test:
    runs-on: ubuntu-latest
    name: "Test application"

    strategy:
      matrix:
        node-version: [16.13]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Test application with Firebase emulator
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          REACT_APP_DEPLOY_ENV: test
          REACT_APP_API_KEY: ${{ secrets.REACT_APP_API_KEY }}
          REACT_APP_AUTH_DOMAIN: ${{ secrets.REACT_APP_AUTH_DOMAIN }}
          REACT_APP_PROJECT_ID: ${{ secrets.REACT_APP_PROJECT_ID }}
          REACT_APP_STORAGE_BUCKET: ${{ secrets.REACT_APP_STORAGE_BUCKET }}
          REACT_APP_MESSAGING_SENDER_ID: ${{ secrets.REACT_APP_MESSAGING_SENDER_ID }}
          REACT_APP_APP_ID: ${{ secrets.REACT_APP_APP_ID }}
          REACT_APP_MEASUREMENT_ID: ${{ secrets.REACT_APP_MEASUREMENT_ID }}
        uses: w9jds/firebase-action@v2.2.2
        with:
          args: emulators:exec 'npm test'
